%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel HF_Prop_ForceModel;
GMAT HF_Prop_ForceModel.CentralBody = Earth;
GMAT HF_Prop_ForceModel.PrimaryBodies = {Earth};
GMAT HF_Prop_ForceModel.Drag = None;
GMAT HF_Prop_ForceModel.SRP = Off;
GMAT HF_Prop_ForceModel.RelativisticCorrection = Off;
GMAT HF_Prop_ForceModel.ErrorControl = RSSStep;
GMAT HF_Prop_ForceModel.GravityField.Earth.Degree = 4;
GMAT HF_Prop_ForceModel.GravityField.Earth.Order = 4;
GMAT HF_Prop_ForceModel.GravityField.Earth.StmLimit = 100;
GMAT HF_Prop_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT HF_Prop_ForceModel.GravityField.Earth.TideModel = 'None';

Create ForceModel LF_Prop_ForceModel;
GMAT LF_Prop_ForceModel.CentralBody = Earth;
GMAT LF_Prop_ForceModel.PrimaryBodies = {Earth};
GMAT LF_Prop_ForceModel.Drag = None;
GMAT LF_Prop_ForceModel.SRP = Off;
GMAT LF_Prop_ForceModel.RelativisticCorrection = Off;
GMAT LF_Prop_ForceModel.ErrorControl = RSSStep;
GMAT LF_Prop_ForceModel.GravityField.Earth.Degree = 0;
GMAT LF_Prop_ForceModel.GravityField.Earth.Order = 0;
GMAT LF_Prop_ForceModel.GravityField.Earth.StmLimit = 100;
GMAT LF_Prop_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT LF_Prop_ForceModel.GravityField.Earth.TideModel = 'None';

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator HF_Prop;
GMAT HF_Prop.FM = HF_Prop_ForceModel;
GMAT HF_Prop.Type = RungeKutta89;
GMAT HF_Prop.InitialStepSize = 60;
GMAT HF_Prop.Accuracy = 9.999999999999999e-12;
GMAT HF_Prop.MinStep = 0.001;
GMAT HF_Prop.MaxStep = 2700;
GMAT HF_Prop.MaxStepAttempts = 50;
GMAT HF_Prop.StopIfAccuracyIsViolated = true;

Create Propagator LF_Prop;
GMAT LF_Prop.FM = LF_Prop_ForceModel;
GMAT LF_Prop.Type = RungeKutta89;
GMAT LF_Prop.InitialStepSize = 60;
GMAT LF_Prop.Accuracy = 9.999999999999999e-12;
GMAT LF_Prop.MinStep = 0.001;
GMAT LF_Prop.MaxStep = 2700;
GMAT LF_Prop.MaxStepAttempts = 50;
GMAT LF_Prop.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Burns
%----------------------------------------

Create ImpulsiveBurn INC_MODIF_BURN;
GMAT INC_MODIF_BURN.CoordinateSystem = Local;
GMAT INC_MODIF_BURN.Origin = Earth;
GMAT INC_MODIF_BURN.Axes = VNB;
GMAT INC_MODIF_BURN.Element1 = 0;
GMAT INC_MODIF_BURN.Element2 = 0;
GMAT INC_MODIF_BURN.Element3 = 0;
GMAT INC_MODIF_BURN.DecrementMass = false;
GMAT INC_MODIF_BURN.Isp = 300;
GMAT INC_MODIF_BURN.GravitationalAccel = 9.81;

Create ImpulsiveBurn HOHMANN1;
GMAT HOHMANN1.CoordinateSystem = Local;
GMAT HOHMANN1.Origin = Earth;
GMAT HOHMANN1.Axes = VNB;
GMAT HOHMANN1.Element1 = 0;
GMAT HOHMANN1.Element2 = 0;
GMAT HOHMANN1.Element3 = 0;
GMAT HOHMANN1.DecrementMass = false;
GMAT HOHMANN1.Isp = 300;
GMAT HOHMANN1.GravitationalAccel = 9.81;

Create ImpulsiveBurn HOHMANN2;
GMAT HOHMANN2.CoordinateSystem = Local;
GMAT HOHMANN2.Origin = Earth;
GMAT HOHMANN2.Axes = VNB;
GMAT HOHMANN2.Element1 = 0;
GMAT HOHMANN2.Element2 = 0;
GMAT HOHMANN2.Element3 = 0;
GMAT HOHMANN2.DecrementMass = false;
GMAT HOHMANN2.Isp = 300;
GMAT HOHMANN2.GravitationalAccel = 9.81;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView Orbit_View;
GMAT Orbit_View.SolverIterations = Current;
GMAT Orbit_View.UpperLeft = [ 0.4270833333333333 0.3177777777777778 ];
GMAT Orbit_View.Size = [ 0.5666666666666667 0.5011111111111111 ];
GMAT Orbit_View.RelativeZOrder = 62;
GMAT Orbit_View.Maximized = false;
GMAT Orbit_View.Add = {HUNTER, TARGET1, Earth};
GMAT Orbit_View.CoordinateSystem = EarthMJ2000Eq;
GMAT Orbit_View.DrawObject = [ true true true ];
GMAT Orbit_View.DataCollectFrequency = 1;
GMAT Orbit_View.UpdatePlotFrequency = 1;
GMAT Orbit_View.NumPointsToRedraw = 0;
GMAT Orbit_View.ShowPlot = true;
GMAT Orbit_View.MaxPlotPoints = 100;
GMAT Orbit_View.ShowLabels = true;
GMAT Orbit_View.ViewPointReference = Earth;
GMAT Orbit_View.ViewPointVector = [ 20000 20000 0 ];
GMAT Orbit_View.ViewDirection = Earth;
GMAT Orbit_View.ViewScaleFactor = 1;
GMAT Orbit_View.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT Orbit_View.ViewUpAxis = Z;
GMAT Orbit_View.EclipticPlane = Off;
GMAT Orbit_View.XYPlane = Off;
GMAT Orbit_View.WireFrame = Off;
GMAT Orbit_View.Axes = Off;
GMAT Orbit_View.Grid = Off;
GMAT Orbit_View.SunLine = Off;
GMAT Orbit_View.UseInitialView = On;
GMAT Orbit_View.StarCount = 7000;
GMAT Orbit_View.EnableStars = On;
GMAT Orbit_View.EnableConstellations = On;

Create DynamicDataDisplay DynamicDataDisplay1;
GMAT DynamicDataDisplay1.UpperLeft = [ 0.1659722222222222 0.02222222222222222 ];
GMAT DynamicDataDisplay1.Size = [ 0.3472222222222222 0.35 ];
GMAT DynamicDataDisplay1.RelativeZOrder = 90;
GMAT DynamicDataDisplay1.Maximized = false;
GMAT DynamicDataDisplay1.AddParameters = {1, dI_1_norm, t_dI_1};
GMAT DynamicDataDisplay1.AddParameters = {2, hohmann_dV1_1, t_H1_1};
GMAT DynamicDataDisplay1.AddParameters = {3, hohmann_dV2_1, t_H2_1};
GMAT DynamicDataDisplay1.AddParameters = {4, dV_total, ''};
GMAT DynamicDataDisplay1.RowTextColors = {1, [0 0 0], [0 0 0]};
GMAT DynamicDataDisplay1.RowTextColors = {2, [0 0 0], [0 0 0]};
GMAT DynamicDataDisplay1.RowTextColors = {3, [0 0 0], [0 0 0]};
GMAT DynamicDataDisplay1.RowTextColors = {4, [0 0 0], [0 0 0]};
GMAT DynamicDataDisplay1.WarnColor = [218 165 32];
GMAT DynamicDataDisplay1.CritColor = [255 0 0];

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------
Create Variable PI wH wT H_TOF alpha phi_i phi_f WaitT;
Create Variable ri rf mu_EARTH;
Create Variable dV_normal_1 dV_negVel_1 dI_1_norm;
Create Variable hohmann_dV1_1 hohmann_dV2_1;
Create Variable t_dI_1;
Create Variable t_H1_1, t_H2_1;
Create Variable dV_total;
GMAT PI = 3.14159265; % General variables
GMAT mu_EARTH = 398600.4418; % General variables
GMAT dV_total = 0;




%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;

% -- RAAN DRIFT --
Propagate HF_Prop(HUNTER, TARGET1) {HUNTER.RAAN = TARGET1.RAAN, TARGET1.RAAN = HUNTER.RAAN};
% Propagation until reaching a node 
Propagate HF_Prop(HUNTER, TARGET1) {HUNTER.Latitude = 0.0};

% -- INCLINATION MODIFICATION
GMAT dV_normal_1 = HUNTER.VMAG * sin((TARGET1.INC - HUNTER.INC) * PI / 180);
GMAT dV_negVel_1 = HUNTER.VMAG * (1 - cos((TARGET1.INC - HUNTER.INC) * PI / 180));

GMAT INC_MODIF_BURN.Element1 = -dV_negVel_1;
If HUNTER.VZ <= 0
   GMAT INC_MODIF_BURN.Element2 = - dV_normal_1;
Else
   GMAT INC_MODIF_BURN.Element2 = + dV_normal_1;
EndIf;
GMAT INC_MODIF_BURN.Element3 = 0;
GMAT dI_1_norm = sqrt(dV_negVel_1^2 + dV_normal_1^2);
UpdateDynamicData DynamicDataDisplay1;

Maneuver INC_MODIF_BURN(HUNTER);
GMAT t_dI_1 = HUNTER.A1ModJulian;
GMAT dV_total = dV_total + dI_1_norm;
UpdateDynamicData DynamicDataDisplay1;

% -- Orbital rendezvous -- 
GMAT wH = sqrt(mu_EARTH/HUNTER.SMA^3);
GMAT wT = sqrt(mu_EARTH/TARGET1.SMA^3);

GMAT H_TOF = PI * sqrt((HUNTER.SMA + TARGET1.SMA)^3 / (8 * mu_EARTH));
GMAT alpha = wT * H_TOF;

GMAT phi_i = ((TARGET1.TA + TARGET1.AOP) - (HUNTER.TA + HUNTER.AOP)) * PI / 180;
GMAT phi_f = PI - alpha;

GMAT WaitT = (phi_f - phi_i) / (wT - wH);
While WaitT < 0
   If wT > wH
      GMAT WaitT = WaitT + 2*PI / (wT - wH);
   EndIf;
   If wT < wH
      GMAT WaitT = WaitT - 2*PI / (wT - wH);
   EndIf;
EndWhile;

GMAT ri = HUNTER.SMA;
GMAT rf = TARGET1.SMA;

GMAT hohmann_dV1_1 = sqrt(mu_EARTH/ri) * (sqrt(2*rf/(rf + ri)) - 1);
GMAT hohmann_dV2_1 = sqrt(mu_EARTH/rf) * (1 - sqrt(2*ri/(rf + ri)));

GMAT HOHMANN1.Element1 = hohmann_dV1_1;
GMAT HOHMANN1.Element2 = 0;
GMAT HOHMANN1.Element3 = 0;

GMAT HOHMANN2.Element1 = hohmann_dV2_1;
GMAT HOHMANN2.Element2 = 0;
GMAT HOHMANN2.Element3 = 0;

Propagate LF_Prop(HUNTER, TARGET1) {HUNTER.ElapsedSecs = WaitT};
Maneuver HOHMANN1(HUNTER);
GMAT t_H1_1 = HUNTER.A1ModJulian;
GMAT dV_total = dV_total + hohmann_dV1_1;
UpdateDynamicData DynamicDataDisplay1;
Propagate LF_Prop(HUNTER, TARGET1) {HUNTER.ElapsedSecs = H_TOF};
Maneuver HOHMANN2(HUNTER);
GMAT t_H2_1 = HUNTER.A1ModJulian;
GMAT dV_total = dV_total + hohmann_dV2_1;
UpdateDynamicData DynamicDataDisplay1;
