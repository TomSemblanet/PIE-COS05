%----------------------------------------
%---------- Spacecrafts
%----------------------------------------
Create Spacecraft HUNTER;
GMAT HUNTER.DateFormat = UTCGregorian;
GMAT HUNTER.Epoch = '04 Jul 2014 09:30:15.235';
GMAT HUNTER.CoordinateSystem = EarthMJ2000Eq;
GMAT HUNTER.DisplayStateType = Keplerian;
GMAT HUNTER.SMA = 7200.0;
GMAT HUNTER.ECC = 0.0001;
GMAT HUNTER.INC = 51.56620156177409;
GMAT HUNTER.RAAN = 11.459155902616464;
GMAT HUNTER.AOP = 22.91831180523293;
GMAT HUNTER.TA = 34.37746770784939;
GMAT HUNTER.OrbitColor = Red;

Create Spacecraft TARGET1;
GMAT TARGET1.DateFormat = UTCGregorian;
GMAT TARGET1.Epoch = '04 Jul 2014 09:30:15.235';
GMAT TARGET1.CoordinateSystem = EarthMJ2000Eq;
GMAT TARGET1.DisplayStateType = Keplerian;
GMAT TARGET1.SMA = 7345.817253545276;
GMAT TARGET1.ECC = 0.0015872;
GMAT TARGET1.INC = 82.9435;
GMAT TARGET1.RAAN = 84.4145;
GMAT TARGET1.AOP = 194.18140000000002;
GMAT TARGET1.TA = 340.0366;
GMAT TARGET1.OrbitColor = Green;

Create Spacecraft TARGET2;
GMAT TARGET2.DateFormat = UTCGregorian;
GMAT TARGET2.Epoch = '04 Jul 2014 09:30:15.235';
GMAT TARGET2.CoordinateSystem = EarthMJ2000Eq;
GMAT TARGET2.DisplayStateType = Keplerian;
GMAT TARGET2.SMA = 7221.496754339261;
GMAT TARGET2.ECC = 0.0072598;
GMAT TARGET2.INC = 81.2526;
GMAT TARGET2.RAAN = 112.33020000000002;
GMAT TARGET2.AOP = 117.21760000000002;
GMAT TARGET2.TA = 310.141;
GMAT TARGET2.OrbitColor = Blue;

Create Spacecraft TARGET3;
GMAT TARGET3.DateFormat = UTCGregorian;
GMAT TARGET3.Epoch = '04 Jul 2014 09:30:15.235';
GMAT TARGET3.CoordinateSystem = EarthMJ2000Eq;
GMAT TARGET3.DisplayStateType = Keplerian;
GMAT TARGET3.SMA = 7222.959539901546;
GMAT TARGET3.ECC = 0.0002786;
GMAT TARGET3.INC = 71.0011;
GMAT TARGET3.RAAN = 64.3305;
GMAT TARGET3.AOP = 112.2268;
GMAT TARGET3.TA = 247.91499999999996;
GMAT TARGET3.OrbitColor = Yellow;

%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel HF_Prop_ForceModel;
GMAT HF_Prop_ForceModel.CentralBody = Earth;
GMAT HF_Prop_ForceModel.PrimaryBodies = {Earth};
GMAT HF_Prop_ForceModel.Drag = None;
GMAT HF_Prop_ForceModel.SRP = Off;
GMAT HF_Prop_ForceModel.RelativisticCorrection = Off;
GMAT HF_Prop_ForceModel.ErrorControl = RSSStep;
GMAT HF_Prop_ForceModel.GravityField.Earth.Degree = 4;
GMAT HF_Prop_ForceModel.GravityField.Earth.Order = 4;
GMAT HF_Prop_ForceModel.GravityField.Earth.StmLimit = 100;
GMAT HF_Prop_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT HF_Prop_ForceModel.GravityField.Earth.TideModel = 'None';

Create ForceModel LF_Prop_ForceModel;
GMAT LF_Prop_ForceModel.CentralBody = Earth;
GMAT LF_Prop_ForceModel.PrimaryBodies = {Earth};
GMAT LF_Prop_ForceModel.Drag = None;
GMAT LF_Prop_ForceModel.SRP = Off;
GMAT LF_Prop_ForceModel.RelativisticCorrection = Off;
GMAT LF_Prop_ForceModel.ErrorControl = RSSStep;
GMAT LF_Prop_ForceModel.GravityField.Earth.Degree = 0;
GMAT LF_Prop_ForceModel.GravityField.Earth.Order = 0;
GMAT LF_Prop_ForceModel.GravityField.Earth.StmLimit = 100;
GMAT LF_Prop_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT LF_Prop_ForceModel.GravityField.Earth.TideModel = 'None';

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator HF_Prop;
GMAT HF_Prop.FM = HF_Prop_ForceModel;
GMAT HF_Prop.Type = RungeKutta89;
GMAT HF_Prop.InitialStepSize = 60;
GMAT HF_Prop.Accuracy = 9.999999999999999e-12;
GMAT HF_Prop.MinStep = 0.001;
GMAT HF_Prop.MaxStep = 2700;
GMAT HF_Prop.MaxStepAttempts = 50;
GMAT HF_Prop.StopIfAccuracyIsViolated = true;

Create Propagator LF_Prop;
GMAT LF_Prop.FM = LF_Prop_ForceModel;
GMAT LF_Prop.Type = RungeKutta89;
GMAT LF_Prop.InitialStepSize = 60;
GMAT LF_Prop.Accuracy = 9.999999999999999e-12;
GMAT LF_Prop.MinStep = 0.001;
GMAT LF_Prop.MaxStep = 2700;
GMAT LF_Prop.MaxStepAttempts = 50;
GMAT LF_Prop.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Burns
%----------------------------------------

Create ImpulsiveBurn INC_MODIF_BURN;
GMAT INC_MODIF_BURN.CoordinateSystem = Local;
GMAT INC_MODIF_BURN.Origin = Earth;
GMAT INC_MODIF_BURN.Axes = VNB;
GMAT INC_MODIF_BURN.Element1 = 0;
GMAT INC_MODIF_BURN.Element2 = 0;
GMAT INC_MODIF_BURN.Element3 = 0;
GMAT INC_MODIF_BURN.DecrementMass = false;
GMAT INC_MODIF_BURN.Isp = 300;
GMAT INC_MODIF_BURN.GravitationalAccel = 9.81;

Create ImpulsiveBurn HOHMANN1;
GMAT HOHMANN1.CoordinateSystem = Local;
GMAT HOHMANN1.Origin = Earth;
GMAT HOHMANN1.Axes = VNB;
GMAT HOHMANN1.Element1 = 0;
GMAT HOHMANN1.Element2 = 0;
GMAT HOHMANN1.Element3 = 0;
GMAT HOHMANN1.DecrementMass = false;
GMAT HOHMANN1.Isp = 300;
GMAT HOHMANN1.GravitationalAccel = 9.81;

Create ImpulsiveBurn HOHMANN2;
GMAT HOHMANN2.CoordinateSystem = Local;
GMAT HOHMANN2.Origin = Earth;
GMAT HOHMANN2.Axes = VNB;
GMAT HOHMANN2.Element1 = 0;
GMAT HOHMANN2.Element2 = 0;
GMAT HOHMANN2.Element3 = 0;
GMAT HOHMANN2.DecrementMass = false;
GMAT HOHMANN2.Isp = 300;
GMAT HOHMANN2.GravitationalAccel = 9.81;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView Orbit_View;
GMAT Orbit_View.SolverIterations = Current;
GMAT Orbit_View.UpperLeft = [ 0.4270833333333333 0.3177777777777778 ];
GMAT Orbit_View.Size = [ 0.5666666666666667 0.5011111111111111 ];
GMAT Orbit_View.RelativeZOrder = 62;
GMAT Orbit_View.Maximized = false;
GMAT Orbit_View.Add = {HUNTER, TARGET1, TARGET2, TARGET3, Earth};
GMAT Orbit_View.CoordinateSystem = EarthMJ2000Eq;
GMAT Orbit_View.DrawObject = [ true true true ];
GMAT Orbit_View.DataCollectFrequency = 1;
GMAT Orbit_View.UpdatePlotFrequency = 1;
GMAT Orbit_View.NumPointsToRedraw = 0;
GMAT Orbit_View.ShowPlot = true;
GMAT Orbit_View.MaxPlotPoints = 100;
GMAT Orbit_View.ShowLabels = true;
GMAT Orbit_View.ViewPointReference = Earth;
GMAT Orbit_View.ViewPointVector = [ 20000 20000 0 ];
GMAT Orbit_View.ViewDirection = Earth;
GMAT Orbit_View.ViewScaleFactor = 1;
GMAT Orbit_View.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT Orbit_View.ViewUpAxis = Z;
GMAT Orbit_View.EclipticPlane = Off;
GMAT Orbit_View.XYPlane = Off;
GMAT Orbit_View.WireFrame = Off;
GMAT Orbit_View.Axes = Off;
GMAT Orbit_View.Grid = Off;
GMAT Orbit_View.SunLine = Off;
GMAT Orbit_View.UseInitialView = On;
GMAT Orbit_View.StarCount = 7000;
GMAT Orbit_View.EnableStars = On;
GMAT Orbit_View.EnableConstellations = On;

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------
Create Variable dV_normal dV_negVel PI wH wT H_TOF alpha phi_i phi_f WaitT;
Create Variable ri rf hohmann_dV1 hohmann_dV2 mu_EARTH;
GMAT PI = 3.14159265; % General variables
GMAT mu_EARTH = 398600.4418; % General variables




%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;

% -- RAAN DRIFT --
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.RAAN = TARGET1.RAAN, TARGET1.RAAN = HUNTER.RAAN};
% Propagation until reaching a node 
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.Latitude = 0.0};

% -- INCLINATION MODIFICATION
GMAT dV_normal = HUNTER.VMAG * sin((TARGET1.INC - HUNTER.INC) * PI / 180);
GMAT dV_negVel = HUNTER.VMAG * (1 - cos((TARGET1.INC - HUNTER.INC) * PI / 180));

GMAT INC_MODIF_BURN.Element1 = -dV_negVel;
If HUNTER.VZ <= 0
   GMAT INC_MODIF_BURN.Element2 = - dV_normal;
Else
   GMAT INC_MODIF_BURN.Element2 = + dV_normal;
EndIf;
GMAT INC_MODIF_BURN.Element3 = 0;

Maneuver INC_MODIF_BURN(HUNTER);

% -- Orbital rendezvous -- 
GMAT wH = sqrt(mu_EARTH/HUNTER.SMA^3);
GMAT wT = sqrt(mu_EARTH/TARGET1.SMA^3);

GMAT H_TOF = PI * sqrt((HUNTER.SMA + TARGET1.SMA)^3 / (8 * mu_EARTH));
GMAT alpha = wT * H_TOF;

GMAT phi_i = ((TARGET1.TA + TARGET1.AOP) - (HUNTER.TA + HUNTER.AOP)) * PI / 180;
GMAT phi_f = PI - alpha;

GMAT WaitT = (phi_f - phi_i) / (wT - wH);
While WaitT < 0
   If wT > wH
      GMAT WaitT = WaitT + 2*PI / (wT - wH);
   EndIf;
   If wT < wH
      GMAT WaitT = WaitT - 2*PI / (wT - wH);
   EndIf;
EndWhile;

GMAT ri = HUNTER.SMA;
GMAT rf = TARGET1.SMA;

GMAT hohmann_dV1 = sqrt(mu_EARTH/ri) * (sqrt(2*rf/(rf + ri)) - 1);
GMAT hohmann_dV2 = sqrt(mu_EARTH/rf) * (1 - sqrt(2*ri/(rf + ri)));

GMAT HOHMANN1.Element1 = hohmann_dV1;
GMAT HOHMANN1.Element2 = 0;
GMAT HOHMANN1.Element3 = 0;

GMAT HOHMANN2.Element1 = hohmann_dV2;
GMAT HOHMANN2.Element2 = 0;
GMAT HOHMANN2.Element3 = 0;

Propagate LF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = WaitT};
Maneuver HOHMANN1(HUNTER);
Propagate LF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = H_TOF};
Maneuver HOHMANN2(HUNTER);
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = 2.592E6};

% ---------------------------
% ------- END DEBRIS #1
% ---------------------------

% -- RAAN DRIFT --
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.RAAN = TARGET2.RAAN, TARGET2.RAAN = HUNTER.RAAN};

% Propagation until reaching a node 
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.Latitude = 0.0};

% -- INCLINATION MODIFICATION
GMAT dV_normal = HUNTER.VMAG * sin((TARGET2.INC - HUNTER.INC) * PI / 180);
GMAT dV_negVel = HUNTER.VMAG * (1 - cos((TARGET2.INC - HUNTER.INC) * PI / 180));

GMAT INC_MODIF_BURN.Element1 = -dV_negVel;
If HUNTER.VZ <= 0
   GMAT INC_MODIF_BURN.Element2 = - dV_normal;
Else
   GMAT INC_MODIF_BURN.Element2 = + dV_normal;
EndIf;
GMAT INC_MODIF_BURN.Element3 = 0;

Maneuver INC_MODIF_BURN(HUNTER);


% -- Orbital rendezvous -- 
GMAT wH = sqrt(mu_EARTH/HUNTER.SMA^3);
GMAT wT = sqrt(mu_EARTH/TARGET2.SMA^3);

GMAT H_TOF = PI * sqrt((HUNTER.SMA + TARGET2.SMA)^3 / (8 * mu_EARTH));
GMAT alpha = wT * H_TOF;

GMAT phi_i = ((TARGET2.TA + TARGET2.AOP) - (HUNTER.TA + HUNTER.AOP)) * PI / 180;
GMAT phi_f = PI - alpha;

GMAT WaitT = (phi_f - phi_i) / (wT - wH);
While WaitT < 0
   If wT > wH
      GMAT WaitT = WaitT + 2*PI / (wT - wH);
   EndIf;
   If wT < wH
      GMAT WaitT = WaitT - 2*PI / (wT - wH);
   EndIf;
EndWhile;

GMAT ri = HUNTER.SMA;
GMAT rf = TARGET2.SMA;

GMAT hohmann_dV1 = sqrt(mu_EARTH/ri) * (sqrt(2*rf/(rf + ri)) - 1);
GMAT hohmann_dV2 = sqrt(mu_EARTH/rf) * (1 - sqrt(2*ri/(rf + ri)));

GMAT HOHMANN1.Element1 = hohmann_dV1;
GMAT HOHMANN1.Element2 = 0;
GMAT HOHMANN1.Element3 = 0;

GMAT HOHMANN2.Element1 = hohmann_dV2;
GMAT HOHMANN2.Element2 = 0;
GMAT HOHMANN2.Element3 = 0;

Propagate LF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = WaitT};
Maneuver HOHMANN1(HUNTER);
Propagate LF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = H_TOF};
Maneuver HOHMANN2(HUNTER);
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = 2.592E6};


% ---------------------------
% ------- END DEBRIS #2
% ---------------------------

% -- RAAN DRIFT --
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.RAAN = TARGET3.RAAN, TARGET3.RAAN = HUNTER.RAAN};

% Propagation until reaching a node 
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.Latitude = 0.0};

% -- INCLINATION MODIFICATION
GMAT dV_normal = HUNTER.VMAG * sin((TARGET3.INC - HUNTER.INC) * PI / 180);
GMAT dV_negVel = HUNTER.VMAG * (1 - cos((TARGET3.INC - HUNTER.INC) * PI / 180));

GMAT INC_MODIF_BURN.Element1 = -dV_negVel;
If HUNTER.VZ <= 0
   GMAT INC_MODIF_BURN.Element2 = - dV_normal;
Else
   GMAT INC_MODIF_BURN.Element2 = + dV_normal;
EndIf;
GMAT INC_MODIF_BURN.Element3 = 0;

Maneuver INC_MODIF_BURN(HUNTER);


% -- Orbital rendezvous -- 
GMAT wH = sqrt(mu_EARTH/HUNTER.SMA^3);
GMAT wT = sqrt(mu_EARTH/TARGET3.SMA^3);

GMAT H_TOF = PI * sqrt((HUNTER.SMA + TARGET3.SMA)^3 / (8 * mu_EARTH));
GMAT alpha = wT * H_TOF;

GMAT phi_i = ((TARGET3.TA + TARGET3.AOP) - (HUNTER.TA + HUNTER.AOP)) * PI / 180;
GMAT phi_f = PI - alpha;

GMAT WaitT = (phi_f - phi_i) / (wT - wH);
While WaitT < 0
   If wT > wH
      GMAT WaitT = WaitT + 2*PI / (wT - wH);
   EndIf;
   If wT < wH
      GMAT WaitT = WaitT - 2*PI / (wT - wH);
   EndIf;
EndWhile;

GMAT ri = HUNTER.SMA;
GMAT rf = TARGET3.SMA;

GMAT hohmann_dV1 = sqrt(mu_EARTH/ri) * (sqrt(2*rf/(rf + ri)) - 1);
GMAT hohmann_dV2 = sqrt(mu_EARTH/rf) * (1 - sqrt(2*ri/(rf + ri)));

GMAT HOHMANN1.Element1 = hohmann_dV1;
GMAT HOHMANN1.Element2 = 0;
GMAT HOHMANN1.Element3 = 0;

GMAT HOHMANN2.Element1 = hohmann_dV2;
GMAT HOHMANN2.Element2 = 0;
GMAT HOHMANN2.Element3 = 0;

Propagate LF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = WaitT};
Maneuver HOHMANN1(HUNTER);
Propagate LF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = H_TOF};
Maneuver HOHMANN2(HUNTER);
Propagate HF_Prop(HUNTER, TARGET1, TARGET2, TARGET3) {HUNTER.ElapsedSecs = 2.592E6};
